---
title: "European Drug Companies"
categories: [tidytuesday]
date: 03-14-2023
self-contained: true
---

For Tidy Tuesday this week (3/14), I took a quick look at the drugs brought out by European Drug companies.

The first thing we'll do is load the data in and use `skimr::skim()` to understand the data structure.

```{r}
library(tidyverse)

drugs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-03-14/drugs.csv')

skimr::skim(drugs)
```
Then we'll take a look at the data using `visdat::vis_dat()` 

```{r}
visdat::vis_dat(drugs)

```

# Drugs by Therapeutic Area

Not surprisingly, Diabetes Type 2 is the top therapeutic area, followed by HIV infections, and hypertension.

```{r}
drugs |> 
  tidyr::drop_na(therapeutic_area) |>
  count(therapeutic_area) |> 
  arrange(desc(n)) |> 
  dplyr::filter(n > 10) |>
  gt::gt()
```

# Most Common Therapeutic Area Plot

Here's a plotly plot that shows those therapeutic areas that have more than 10 drugs. Mouse over them to get the drug name.

```{r}
my_plot <- drugs |> 
  tidyr::drop_na(therapeutic_area) |> 
  count(therapeutic_area) |> 
  arrange(desc(n)) |>
  dplyr::filter(n > 10) |> 
  dplyr::mutate(therapeutic_area = fct_reorder(therapeutic_area, n)) |>
  ggplot() + aes(x=therapeutic_area, y=n) + geom_bar(stat = "identity") + coord_flip() +
  theme(axis.title.x = element_blank(), axis.title.y = element_blank()) +
  ggtitle("Number of Drugs by Therapeutic Area")

plotly::ggplotly(my_plot)
```

# Orphan Medicines

Looking at the therapeutic areas for orphan drugs, we see different priorities.

```{r}
drugs |>
  filter(orphan_medicine == TRUE) |>
  count(therapeutic_area) |>
  arrange(desc(n)) |>
  head(n=20) |>
  gt::gt()

```



# Which Companies?

What companies have the most drugs in this set?

```{r}
companies <- drugs |>
  count(marketing_authorisation_holder_company_name) |>
  arrange(desc(n)) |>
  head(n = 20) 

companies |>
  gt::gt()
```

```{r}
out_plot <- ggplot(drugs) +
  aes(x=decision_date, y=revision_number, color=therapeutic_area) +
  geom_point() + theme(legend.position = "none")

plotly::ggplotly(out_plot, tooltip = c("medicine_name", "decision_date", "revision_number", "therapeutic_area"))
```